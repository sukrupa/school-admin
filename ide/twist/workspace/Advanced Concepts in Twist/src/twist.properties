# The following options are supported by twist in selenium.server.options :
#
# -port <nnnn>: the port number the Selenium server should use (default 4444).
# -timeout <nnnn>: number of seconds before we should give up (integer).
# -multiWindow: puts you into a mode where the web site under test executes in a separate window. Selenium supports frames in this mode.
# -forcedBrowserMode <browser>: sets the browser mode (e.g. "*iexplore" for all sessions, no matter what is passed to getNewBrowserSession().
# -userExtensions <file>: indicates a JavaScript file that will be loaded into Selenium.
# -browserSessionReuse: stops re-initialization and spawning of the browser between tests.
# -avoidProxy: By default, Selenium proxies every browser request. Set this flag to make the browser use Selenium proxy only for URLs containing '/selenium-server'
# -firefoxProfileTemplate <dir>: normally, a fresh Firefox profile is generated for each launch. You can specify the Firefox profile directory instead.
# -proxyInjectionMode: puts you into proxy injection mode, a mode where the Selenium server acts as a proxy server for all content going to the application under test. 
#      Under this mode, multiple domains can be visited, and the following additional flags are supported:
#      -dontInjectRegex <regex>: regular expression of URLs used to bypass proxy injection mode.
#      -userJsInjection <file>: specifies a JavaScript file which will be injected into all pages
#      -userContentTransformation <regex> <replacement>: a regular expression which is matched against all test HTML content; the second is a string which will 
#       replace matches. 
#      
#      These flags can be used any number of times. An example of how this could be useful: 
#      if you add "-userContentTransformation https http" then all "https" strings in the HTML of the application under test will be changed to "http".
#
# We also support the following properties: 
# -Dhttp.proxyHost, -Dhttp.nonProxyHosts and -Dhttp.proxyPort. 
# Selenium RC normally overrides your proxy server configuration, using the Selenium Server as a proxy. Use these options if you need to use your own proxy together
# with the Selenium Server proxy. 
#
selenium.server.options = -port 4545 -avoidProxy



#selenium driver options
selenium.browserLauncher = *pifirefox
selenium.browserURL = http://localhost:8080



#Twist specific selenium driver options. Setting 'twist.selenium.enableImplicitWait' to true is relevant when proxyInjectionMode option is set in selenium.server.options
twist.selenium.highlight = false


#Whether selenium should operate with implicit waits enabled. Setting this false will make selenium work in default mode.
twist.selenium.enableImplicitWait = false


twist.generate_local_report=false
# Modify the property below to write HTML reports to a custom folder. 
# Relative paths such as "reports" would cause the folder to be created within your project
# You may use absolute paths such as "/reports" or "\\\\machinename/folder1/folder2" (in Windows) too
twist.local_report_location=reports
